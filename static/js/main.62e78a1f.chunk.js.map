{"version":3,"sources":["assets/images/profilepic.png","assets/images/campingpic.png","assets/images/recipepic.png","boids.js","components/Footer/index.js","components/Hero/index.js","components/Card/CardInfo/index.js","components/Card/index.js","components/Carousel/index.js","pages/HomePage.js","components/Content/index.js","pages/AboutPage.js","pages/ContactPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","console","log","Footer","className","Container","fluid","Row","Col","md","sm","Hero","props","Jumbotron","title","subTitle","text","CardInfo","Card","onClick","window","open","item","link","src","imgSrc","alt","Carousel","handleCardClicked","id","card","items","state","selected","forEach","setState","makeItems","map","e","key","campingpic","select","profilepic","recipepic","this","Component","HomePage","Content","children","AboutPage","ContactPage","handleChange","event","target","value","type","checked","name","handleSubmit","preventDefault","disabled","Axios","post","then","res","data","success","emailSent","catch","err","email","message","App","headerLinks","path","home","about","contact","script","document","createElement","async","boids","div","appendChild","ref","el","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","to","exact","render","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.62e78a1f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profilepic.255e97e1.png\";","module.exports = __webpack_public_path__ + \"static/media/campingpic.fcbf7a40.png\";","module.exports = __webpack_public_path__ + \"static/media/recipepic.99fa8267.png\";","// Size of canvas. These get updated to fill the whole browser.\nconsole.log(\"access boid\");\n/* \nlet width = 150;\nlet height = 150;\n\nconst numBoids = 70;\nconst visualRange = 75;\n\nvar boids = [];\n\nfunction initBoids() {\n  for (var i = 0; i < numBoids; i += 1) {\n    boids[boids.length] = {\n      x: Math.random() * width,\n      y: Math.random() * height,\n      dx: Math.random() * 10 - 5,\n      dy: Math.random() * 10 - 5,\n      history: [],\n    };\n  }\n}\n\nfunction distance(boid1, boid2) {\n  return Math.sqrt(\n    (boid1.x - boid2.x) * (boid1.x - boid2.x) +\n      (boid1.y - boid2.y) * (boid1.y - boid2.y)\n  );\n}\n\n// TODO: This is naive and inefficient.\nfunction nClosestBoids(boid, n) {\n  // Make a copy\n  const sorted = boids.slice();\n  // Sort the copy by distance from `boid`\n  sorted.sort((a, b) => distance(boid, a) - distance(boid, b));\n  // Return the `n` closest\n  return sorted.slice(1, n + 1);\n}\n\n// Called initially and whenever the window resizes to update the canvas\n// size and width/height variables.\nfunction sizeCanvas() {\n  const canvas = document.getElementById(\"boids\");\n  width = window.innerWidth;\n  height = window.innerHeight;\n  canvas.width = width;\n  canvas.height = height;\n}\n\n// Constrain a boid to within the window. If it gets too close to an edge,\n// nudge it back in and reverse its direction.\nfunction keepWithinBounds(boid) {\n  const margin = 200;\n  const turnFactor = 1;\n\n  if (boid.x < margin) {\n    boid.dx += turnFactor;\n  }\n  if (boid.x > width - margin) {\n    boid.dx -= turnFactor;\n  }\n\n  if (boid.y < margin) {\n    boid.dy += turnFactor;\n  }\n  if (boid.y > height - margin) {\n    boid.dy -= turnFactor;\n  }\n}\n\n// Find the center of mass of the other boids and adjust velocity slightly to\n// point towards the center of mass.\nfunction flyTowardsCenter(boid) {\n  const centeringFactor = 0.005; // adjust velocity by this %\n\n  let centerX = 0;\n  let centerY = 0;\n  let numNeighbors = 0;\n\n  for (let otherBoid of boids) {\n    if (distance(boid, otherBoid) < visualRange) {\n      centerX += otherBoid.x;\n      centerY += otherBoid.y;\n      numNeighbors += 1;\n    }\n  }\n\n  if (numNeighbors) {\n    centerX = centerX / numNeighbors;\n    centerY = centerY / numNeighbors;\n\n    boid.dx += (centerX - boid.x) * centeringFactor;\n    boid.dy += (centerY - boid.y) * centeringFactor;\n  }\n}\n\n// Move away from other boids that are too close to avoid colliding\nfunction avoidOthers(boid) {\n  const minDistance = 20; // The distance to stay away from other boids\n  const avoidFactor = 0.05; // Adjust velocity by this %\n  let moveX = 0;\n  let moveY = 0;\n  for (let otherBoid of boids) {\n    if (otherBoid !== boid) {\n      if (distance(boid, otherBoid) < minDistance) {\n        moveX += boid.x - otherBoid.x;\n        moveY += boid.y - otherBoid.y;\n      }\n    }\n  }\n\n  boid.dx += moveX * avoidFactor;\n  boid.dy += moveY * avoidFactor;\n}\n\n// Find the average velocity (speed and direction) of the other boids and\n// adjust velocity slightly to match.\nfunction matchVelocity(boid) {\n  const matchingFactor = 0.05; // Adjust by this % of average velocity\n\n  let avgDX = 0;\n  let avgDY = 0;\n  let numNeighbors = 0;\n\n  for (let otherBoid of boids) {\n    if (distance(boid, otherBoid) < visualRange) {\n      avgDX += otherBoid.dx;\n      avgDY += otherBoid.dy;\n      numNeighbors += 1;\n    }\n  }\n\n  if (numNeighbors) {\n    avgDX = avgDX / numNeighbors;\n    avgDY = avgDY / numNeighbors;\n\n    boid.dx += (avgDX - boid.dx) * matchingFactor;\n    boid.dy += (avgDY - boid.dy) * matchingFactor;\n  }\n}\n\n// Speed will naturally vary in flocking behavior, but real animals can't go\n// arbitrarily fast.\nfunction limitSpeed(boid) {\n  const speedLimit = 15;\n\n  const speed = Math.sqrt(boid.dx * boid.dx + boid.dy * boid.dy);\n  if (speed > speedLimit) {\n    boid.dx = (boid.dx / speed) * speedLimit;\n    boid.dy = (boid.dy / speed) * speedLimit;\n  }\n}\n\nconst DRAW_TRAIL = false;\n\nfunction drawBoid(ctx, boid) {\n  const angle = Math.atan2(boid.dy, boid.dx);\n  ctx.translate(boid.x, boid.y);\n  ctx.rotate(angle);\n  ctx.translate(-boid.x, -boid.y);\n  ctx.fillStyle = \"#d3d3d3\";\n  ctx.beginPath();\n  ctx.moveTo(boid.x, boid.y);\n  ctx.lineTo(boid.x - 15, boid.y + 5);\n  ctx.lineTo(boid.x - 15, boid.y - 5);\n  ctx.lineTo(boid.x, boid.y);\n  ctx.fill();\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n  if (DRAW_TRAIL) {\n    ctx.strokeStyle = \"#558cf466\";\n    ctx.beginPath();\n    ctx.moveTo(boid.history[0][0], boid.history[0][1]);\n    for (const point of boid.history) {\n      ctx.lineTo(point[0], point[1]);\n    }\n    ctx.stroke();\n  }\n}\n\n// Main animation loop\nfunction animationLoop() {\n  // Update each boid\n  for (let boid of boids) {\n    // Update the velocities according to each rule\n    flyTowardsCenter(boid);\n    avoidOthers(boid);\n    matchVelocity(boid);\n    limitSpeed(boid);\n    keepWithinBounds(boid);\n\n    // Update the position based on the current velocity\n    boid.x += boid.dx;\n    boid.y += boid.dy;\n    boid.history.push([boid.x, boid.y]);\n    boid.history = boid.history.slice(-50);\n  }\n\n  // Clear the canvas and redraw all the boids in their current positions\n  const ctx = document.getElementById(\"boids\").getContext(\"2d\");\n  ctx.clearRect(0, 0, width, height);\n  for (let boid of boids) {\n    drawBoid(ctx, boid);\n  }\n\n  // Schedule the next frame\n  window.requestAnimationFrame(animationLoop);\n}\n\nwindow.onload = () => {\n  // Make sure the canvas always fills the whole window\n  window.addEventListener(\"resize\", sizeCanvas, false);\n  sizeCanvas();\n\n  // Randomly distribute the boids to start\n  initBoids();\n\n  // Schedule the main animation loop\n  window.requestAnimationFrame(animationLoop);\n};\n\n\n\n*/\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nfunction Footer() {\n  return (\n    <footer className=\"mt-5\">\n      <Container fluid={true}>\n        <Row className=\"border-top justify-content-between p-3\">\n          <Col className=\"p-0\" md={3} sm={12}>\n            Joshua Achorn\n          </Col>\n          <Col className=\"p-0 d-flex justify-content-end\" md={3}>\n            This site was made by Joshua Achorn\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { Jumbotron, Container, Row, Col } from \"react-bootstrap\";\n\nfunction Hero(props) {\n  return (\n    <Jumbotron className=\"bg-transparent jumbotron-fluid p-0\">\n      <Container fluid={true}>\n        <Row className=\"justify-content-center py-5\">\n          <Col md={8} sm={12}>\n            {props.title && (\n              <h1 className=\"display-1 font-weight-bold\">{props.title}</h1>\n            )}\n            {props.subTitle && (\n              <h3 className=\"display-4 font-weight-light\">{props.subTitle}</h3>\n            )}\n            {props.text && (\n              <h3 className=\"lead font-weight-light\">{props.text}</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </Jumbotron>\n  );\n}\n\nexport default Hero;\n","import React from \"react\";\n\nfunction CardInfo(props) {\n  return (\n    <div>\n      <p className=\"j-card-title\">{props.title}</p>\n      <p className=\"j-card-sub-title\">{props.subTitle}</p>\n    </div>\n  );\n}\n\nexport default CardInfo;\n","import React from \"react\";\nimport CardInfo from \"./CardInfo\";\nimport \"./component.css\";\n\nfunction Card(props) {\n  return (\n    <div\n      className=\"d-inline-block j-card\"\n      onClick={() => window.open(props.item.link)}\n    >\n      <img\n        className=\"j-card-image\"\n        src={props.item.imgSrc}\n        alt={props.item.imgSrc}\n        onClick={props.onClick}\n      />\n\n      <CardInfo\n        title={props.item.title}\n        subTitle={props.item.subTitle}\n        link={props.item.link}\n      />\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport profilepic from \"../../assets/images/profilepic.png\";\nimport campingpic from \"../../assets/images/campingpic.png\";\nimport recipepic from \"../../assets/images/recipepic.png\";\nimport Card from \"../Card\";\n\nclass Carousel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [\n        {\n          id: 0,\n          title: \"Camping Logger\",\n          subTitle: \"Camping Organizer\",\n          imgSrc: campingpic,\n          link: \"http://achorn.github.io/Camping-Organizer\",\n          select: \"false\",\n        },\n        {\n          id: 1,\n          title: \"Joshua Achorn\",\n          subTitle: \"My Github Acount\",\n          imgSrc: profilepic,\n          link: \"https://github.com/Achorn\",\n          select: \"false\",\n        },\n        {\n          id: 2,\n          title: \"Recipe Scraper\",\n          subTitle: \"Recipes for your pantry\",\n          imgSrc: recipepic,\n          link: \"https://achorn.github.io/0xProject-CSCI-3308/\",\n          select: \"false\",\n        },\n      ],\n    };\n  }\n  handleCardClicked = (id, card) => {\n    let items = [...this.state.items];\n\n    items[id].selected = items[id].selected ? false : true;\n\n    items.forEach((item) => {\n      if (item.id !== id) {\n        item.selected = false;\n      }\n    });\n    this.setState({\n      items,\n    });\n  };\n  makeItems = (items) => {\n    return items.map((item) => {\n      return (\n        <Card\n          item={item}\n          onClick={(e) => this.handleCardClicked(item.id, e)}\n          key={item.id}\n        />\n      );\n    });\n  };\n  render() {\n    return (\n      <Container fluid={true}>\n        <Row className=\"justify-content-around\">\n          {this.makeItems(this.state.items)}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from \"react\";\n\nimport Hero from \"../components/Hero\";\nimport Carousel from \"../components/Carousel\";\n\nfunction HomePage(props) {\n  return (\n    <div>\n      <Hero title={props.title} subTitle={props.subTitle} text={props.text} />\n      <Carousel />\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nfunction Content(props) {\n  return (\n    <div>\n      <Container fluid={true}>\n        <Row className=\"justify-content-center\">\n          <Col md={8}>{props.children}</Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\nexport default Content;\n","import React from \"react\";\nimport Hero from \"../components/Hero\";\nimport Content from \"../components/Content\";\nfunction AboutPage(props) {\n  return (\n    <div>\n      <Hero title={props.title} subTitle={props.subTitle} />\n      <Content>\n        <p>\n          Hello. My name is Joshua Achorn and I'm a full stack engineer with\n          experience in React, Redux, Node, and SQL\n        </p>\n        <p>\n          As a Musician/designer turned software developer, whether it be making\n          music, art, or software, I love to send my creations out into the\n          world for people to enjoy. My creative side combined with my Sofware\n          dev side gives me insight into the development process.\n        </p>\n\n        <p>\n          My current project is a camping trip helper, for backpackers who want\n          to weigh and manage their gear. It is made with React, Redux, and\n          Bootstrap\n        </p>\n        <p>\n          If I'm not coding, I'm either biking, cooking, hiking, reading, or\n          making coffee with my friends.\n        </p>\n      </Content>\n    </div>\n  );\n}\n\nexport default AboutPage;\n","import React, { Component } from \"react\";\nimport Hero from \"../components/Hero\";\n// import Content from \"../components/Content\";\n// import { Form, Button } from \"react-bootstrap\";\nimport Axios from \"axios\";\nclass ContactPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      message: \"\",\n      disabled: false,\n      emailSent: null,\n    };\n  }\n\n  handleChange = (event) => {\n    const target = event.target;\n    const value = event.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"submit pushed\");\n    this.setState({ disabled: true });\n\n    Axios.post(\"http://localhost:3030/api/email\", this.state)\n      .then((res) => {\n        if (res.data.success) {\n          this.setState({\n            disabled: false,\n            emailSent: true,\n          });\n        } else {\n          this.setState({\n            disabled: false,\n            emailSent: false,\n          });\n        }\n      })\n      .catch((err) => {\n        this.setState({\n          disabled: false,\n          emailSent: false,\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <Hero\n          title={this.props.title}\n          subTitle={\"joshuaachorn@gmail.com\"}\n        ></Hero>\n\n        {/* <Content> */}\n        {/* <Form onSubmit={this.handleSubmit}>\n            <Form.Group>\n              <Form.Label htmlFor=\"full-name\">Full Name</Form.Label>\n              <Form.Control\n                id=\"full-name\"\n                name=\"name\"\n                type=\"text\"\n                value={this.state.name}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label htmlFor=\"email\">Email</Form.Label>\n              <Form.Control\n                id=\"email\"\n                name=\"email\"\n                type=\"text\"\n                value={this.state.email}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label htmlFor=\"message\">Message</Form.Label>\n              <Form.Control\n                id=\"full-message\"\n                name=\"message\"\n                as=\"textarea\"\n                rows={4}\n                value={this.state.message}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Button\n              className=\"d-inline-block\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={this.state.disabled}\n            >\n              Send\n            </Button>\n\n            {this.state.emailSent === true && (\n              <p className=\"d-inline success-msg\">Email Sent</p>\n            )}\n            {this.state.emailSent === false && (\n              <p className=\"d-inline error-msg\">Email Not Sent</p>\n            )}\n          </Form> */}\n        {/* </Content> */}\n      </div>\n    );\n  }\n}\nexport default ContactPage;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport \"./App.css\";\nimport Footer from \"./components/Footer\";\nimport HomePage from \"./pages/HomePage\";\nimport AboutPage from \"./pages/AboutPage\";\nimport ContactPage from \"./pages/ContactPage\";\nimport boids from \"./boids\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"Joshua Achorn\",\n      headerLinks: [\n        { title: \"Home\", path: \"/\" },\n        { title: \"About\", path: \"/about\" },\n        { title: \"Contact\", path: \"/contact\" },\n      ],\n      home: {\n        title: \"Never Stop Learning\",\n        subTitle: \"My Passion projects \",\n        // text: \"Check out more below\",\n      },\n      about: {\n        title: \"About Me\",\n      },\n      contact: {\n        title: \"Let's Talk\",\n      },\n    };\n  }\n  componentDidMount() {\n    const script = document.createElement(\"script\");\n    script.async = true;\n    script.src = boids;\n    this.div.appendChild(script);\n  }\n\n  render() {\n    return (\n      <div ref={(el) => (this.div = el)}>\n        <Router>\n          <Container className=\"p-0\" fluid={true}>\n            <Navbar className=\"border-bottom\" bg=\"transparent\" expand=\"lg\">\n              <Navbar.Brand>Joshua Achorn</Navbar.Brand>\n              <Navbar.Toggle\n                className=\"border-0\"\n                aria-controls=\"navbar-toggle\"\n              />\n              <Navbar.Collapse id=\"navbar-toggle\">\n                <Nav className=\"ml-auto\">\n                  <Link className=\"nav-link\" to=\"/\">\n                    Home\n                  </Link>\n                  <Link className=\"nav-link\" to=\"/about\">\n                    About\n                  </Link>\n                  <Link className=\"nav-link\" to=\"/contact\">\n                    Contact\n                  </Link>\n                </Nav>\n              </Navbar.Collapse>\n            </Navbar>\n            <Route\n              path=\"/\"\n              exact\n              render={() => (\n                <HomePage\n                  title={this.state.home.title}\n                  subTitle={this.state.home.subTitle}\n                  text={this.state.home.text}\n                />\n              )}\n            />\n            <Route\n              path=\"/about\"\n              render={() => <AboutPage title={this.state.about.title} />}\n            />\n            <Route\n              path=\"/contact\"\n              render={() => <ContactPage title={this.state.contact.title} />}\n            />\n            <Footer />\n          </Container>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}